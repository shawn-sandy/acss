// filename: settings.json
// This file contains settings for the GitHub Copilot Chat extension.
// Drop into the .vscode folder of your project to apply these settings.
{
    "github.copilot.chat.codeGeneration.instructions": [
        {
            "text": "Always add a comment: 'Generated by Copilot'."
        },
        {
            "text": "In TypeScript always use underscore for private field names."
        },
        {
            "text": "In TypeScript always use camelCase for public field names."
        },
        {
            "text": "Always use arrow functions for React components."
        },
        {
            "text": "Always use functional components for React components."
        },
        {
            "text": "Always use the latest version of React."
        },
        {
            "text": "Always use the latest version of TypeScript."
        },
        {
            "text": "Always use the latest version of Node.js."
        },
        {
            "text": "Always use the latest version of npm."
        }
    ],
    "github.copilot.chat.commitMessageGeneration.instructions": [
        {
            "text": "Always write commit messages in the conventional commits format. Write an extremely detailed list of the file changes and the reason for the change in the commit message description."
        },
        {
            "text": "Always add a scope to the commit message."
        },
        {
            "text": "add a footer with a list of all the files changed in the commit."
        }
    ],
    "github.copilot.chat.reviewSelection.instructions": [
        {
            "text": "Check for adherence to coding standards and best practices."
        },
        {
            "text": "Ensure that the code is maintainable and easy to understand."
        },
        {
            "text": "Check for performance optimizations and potential bottlenecks."
        },
        {
            "text": "Verify that the code is properly tested and has sufficient test coverage."
        },
        {
            "text": "Review the code for security vulnerabilities and performance issues."
        },
        {
            "text": "Check for code style and formatting issues."
        },
        {
            "text": "Ensure that the code is well-documented and follows best practices."
        },
        {
            "text": "Check for potential bugs and edge cases."
        }
    ],
    "github.copilot.chat.testGeneration.instructions": [
        {
            "text": "Always use Vitest for testing React components."
        },
        {
            "text": "Use Vitest for testing JavaScript code."
        },
        {
            "text": "Use React Testing Library for testing React components."
        },
        {
            "text": "Use Playwright for end-to-end testing."
        },
        {
            "text": "Use Mock Service Worker (MSW) for mocking API requests."
        }
    ]
}