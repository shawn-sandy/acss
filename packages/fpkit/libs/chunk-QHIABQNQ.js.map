{"version":3,"sources":["../src/components/ui.tsx","../src/components/icons/components/code.tsx","../src/components/icons/components/svg.tsx","../src/components/icons/components/home.tsx","../src/components/icons/components/add.tsx","../src/components/icons/components/arrow-left.tsx","../src/components/icons/components/chat.tsx","../src/components/icons/components/arrow-down.tsx","../src/components/icons/components/arrow-up.tsx","../src/components/icons/components/arrow-right.tsx","../src/components/icons/components/user.tsx","../src/components/icons/components/right.tsx","../src/components/icons/components/left.tsx","../src/components/icons/components/minus.tsx","../src/components/icons/components/remove.tsx","../src/components/icons/components/copy.tsx","../src/components/icons/components/up.tsx","../src/components/icons/components/down.tsx","../src/components/icons/components/star.tsx","../src/components/icons/components/play.tsx","../src/components/icons/components/pause.tsx","../src/components/icons/components/resume.tsx","../src/components/icons/components/stop.tsx","../src/components/icons/components/stop-solid.tsx","../src/components/icons/components/play-solid.tsx","../src/components/icons/components/pause-solid.tsx","../src/components/icons/components/resume-solid.tsx","../src/components/icons/icon.tsx"],"names":["React","FP","as","styles","classes","children","defaultStyles","props","ref","Component","styleObj","ui_default","defaultStyes","Svg","fill","strokeColor","size","role","alt","svg_default","Code","Home","Add","ArrowLeft","Chat","ArrowDown","ArrowUp","ArrowRight","User","Right","Left","Minus","Remove","Copy","Up","Down","Star","Play","Pause","Resume","Stop","StopSolid","PlaySolid","PauseSolid","ResumeSolid","Icon","id","icon_default"],"mappings":"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","sourcesContent":["/* eslint-enable react/display-name */\nimport React from 'react'\n\ntype PolymorphicRef<C extends React.ElementType> =\n  React.ComponentPropsWithRef<C>['ref']\n\ntype AsProp<C extends React.ElementType> = {\n  as?: C\n}\n\ntype PropsToOmit<C extends React.ElementType, P> = keyof (AsProp<C> & P)\n\ntype PolymorphicComponentProp<\n  C extends React.ElementType,\n  Props = {},\n> = React.PropsWithChildren<Props & AsProp<C>> &\n  Omit<React.ComponentPropsWithoutRef<C>, PropsToOmit<C, Props>>\n\ntype PolymorphicComponentPropWithRef<\n  C extends React.ElementType,\n  Props = {},\n> = PolymorphicComponentProp<C, Props> & {\n  ref?: PolymorphicRef<C>\n}\n\ntype FPProps<C extends React.ElementType> = PolymorphicComponentPropWithRef<\n  C,\n  {\n    renderStyles?: boolean\n    styles?: React.CSSProperties\n    classes?: string\n    id?: string\n    children?: React.ReactNode\n  }\n>\n\n/*\n * FPComponent type definition\n *\n * Defines the component function signature for the FP component.\n *\n * @typeParam C - The HTML element type to render\n * @param props - The component props\n * @returns React component\n */\ntype FPComponent = <C extends React.ElementType = 'span'>(\n  props: FPProps<C>,\n) => React.ReactElement | any\n\nconst FP: FPComponent = React.forwardRef(\n  <C extends React.ElementType>(\n    { as, styles, classes, children, defaultStyles, ...props }: FPProps<C>,\n    ref?: PolymorphicRef<C>,\n  ) => {\n    const Component = as || 'div'\n\n    const styleObj: React.CSSProperties = { ...defaultStyles, ...styles }\n\n    return (\n      <Component ref={ref} style={styleObj} className={classes} {...props}>\n        {children}\n      </Component>\n    )\n  },\n)\n\nexport default FP\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\nexport const Code = ({\n  strokeColor = 'currentColor',\n  fill = 'none',\n  size = 16,\n  styles,\n  role = 'img',\n  alt = 'Code icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n> = {}) => {\n  return (\n    <Svg size={size} role={role} alt={alt} styles={styles} {...props}>\n      <g\n        fill={fill}\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <rect\n          height=\"22\"\n          width=\"18\"\n          fill=\"none\"\n          stroke={strokeColor}\n          x=\"3\"\n          y=\"1\"\n        />\n        <polyline fill=\"none\" points=\"9 9 6 12 9 15\" />\n        <polyline fill=\"none\" points=\"15 15 18 12 15 9\" />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Code\nCode.styles = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\n\nconst defaultStyes = {\n  display: 'inline-flex',\n  alignItems: 'center',\n  width: 'auto',\n}\n\nexport const Svg = ({\n  fill,\n  strokeColor,\n  styles,\n  size = 24,\n  role = 'img',\n  alt,\n  children,\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt' | 'children'\n>) => {\n  return (\n    <svg\n      fill={fill}\n      stroke={strokeColor}\n      height={size}\n      width={size}\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={styles}\n      role={role}\n      aria-label={alt}\n      {...props}\n    >\n      {children}\n    </svg>\n  )\n}\n\nexport default Svg\nSvg.displayName = 'Svg'\nSvg.styles = defaultStyes\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'currentColor',\n  stroke: 'none',\n}\n\n/**\n * Renders a home icon.\n *\n * @param {string} strokeColor - The color of the icon's stroke.\n * @param {string} fill - The color of the icon's fill.\n * @param {string} size - The size of the icon.\n * @param {string} viewBox - The viewBox of the icon.\n * @param {string} name - The name of the icon.\n * @param {Object} styles - The styles of the icon.\n * @param {Object} props - The props of the icon.\n * @returns {JSX.Element} - A home icon.\n */\nexport const Home = ({\n  strokeColor = 'currentColor',\n  fill = 'none',\n  size = 16,\n  styles = defaultStyles,\n  role = 'img',\n  alt = 'Home icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill={fill}\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <polygon\n          fill=\"none\"\n          points=\"12 2 2 10 2 23 9 23 9 16 15 16 15 23 22 23 22 10 12 2\"\n          stroke={strokeColor}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Home\nHome.displayName = 'Home'\nHome.styles = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'currentColor',\n}\n\n/**\n * Add Icon component\n * @param {string} fill - Icon fill color (default: 'currentColor')\n * @param {string} size - Icon size (default: '24')\n * @param {IconProps} props - Other icon properties\n * @returns {JSX.Element} - Rendered component\n */\nexport const Add = ({\n  fill = 'currentColor',\n  size = 24,\n  role = 'img',\n  alt = 'Add icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>): JSX.Element => {\n  return (\n    <Svg size={size} role={role} alt={alt} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M17,11h-4V7c0-.553-.447-1-1-1s-1,.447-1,1v4H7c-.553,0-1,.447-1,1s.447,1,1,1h4v4c0,.553,.447,1,1,1s1-.447,1-1v-4h4c.553,0,1-.447,1-1s-.447-1-1-1Z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Add\nAdd.styles = defaultStyles\nAdd.displayName = 'Add'\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = { ...Svg.styles }\n\nexport const ArrowLeft = ({\n  strokeColor = 'currentColor',\n  fill = 'currentColor',\n  size = 16,\n  styles,\n  role = 'img',\n  alt = 'Arrow pointing left',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} {...props} alt={alt}>\n      <g fill={fill} strokeMiterlimit=\"10\">\n        <line\n          fill=\"none\"\n          stroke={strokeColor}\n          strokeLinecap=\"butt\"\n          strokeLinejoin=\"miter\"\n          strokeWidth=\"2\"\n          x1=\"22\"\n          x2=\"2\"\n          y1=\"12\"\n          y2=\"12\"\n        />\n        <polyline\n          fill=\"none\"\n          points=\"9,19 2,12 9,5 \"\n          stroke={strokeColor}\n          strokeLinecap=\"square\"\n          strokeLinejoin=\"miter\"\n          strokeWidth=\"2\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default ArrowLeft\nArrowLeft.styles = defaultStyles\nArrowLeft.displayName = 'ArrowLeft'\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = { ...Svg.styles }\n\n/**\n * @param {string} size - The width and height of the icon in pixels. Defaults to 24.\n * @param {string} strokeColor - The color of the icon stroke. Defaults to 'currentcolor'.\n * @param {React.CSSProperties} styles - Additional CSS styles to apply to the icon.\n * @param {IconProps} props - Additional props to pass to the SVG element.\n * @returns {JSX.Element} - A chat icon component that displays a speech bubble with lines representing text.\n */\nexport const Chat = ({\n  size = 16,\n  strokeColor = 'currentcolor',\n  styles,\n  role = 'img',\n  alt = 'Chat icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>): JSX.Element => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g fill={strokeColor} strokeMiterlimit=\"10\">\n        <path\n          d=\"M21,2H3c-1.105,0-2,.895-2,2V15c0,1.105,.895,2,2,2h5l4,5,4-5h5c1.105,0,2-.895,2-2V4c0-1.105-.895-2-2-2Z\"\n          fill=\"none\"\n          stroke={strokeColor}\n          strokeLinecap=\"square\"\n          strokeLinejoin=\"miter\"\n          strokeWidth=\"2\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Chat\nChat.styles = defaultStyles\nChat.displayName = 'Chat'\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = { ...Svg.styles }\n\n/**\n * ArrowDown icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const ArrowDown = ({\n  fill = 'currentColor',\n  styles,\n  size = 16,\n  role = 'img',\n  alt = 'Down icon',\n  ...props\n}: Pick<IconProps, 'fill' | 'styles' | 'size' | 'role' | 'alt'>) => {\n  return (\n    <Svg size={size} role={role} styles={styles} alt={alt} {...props}>\n      <g fill={fill} strokeMiterlimit=\"10\">\n        <line\n          fill=\"none\"\n          stroke={fill}\n          strokeLinecap=\"butt\"\n          strokeLinejoin=\"miter\"\n          strokeWidth=\"2\"\n          x1=\"12\"\n          x2=\"12\"\n          y1=\"2\"\n          y2=\"22\"\n        />\n        <polyline\n          fill=\"none\"\n          points=\"19,15 12,22 5,15 \"\n          stroke={fill}\n          strokeLinecap=\"square\"\n          strokeLinejoin=\"miter\"\n          strokeWidth=\"2\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default ArrowDown\nArrowDown.styles = defaultStyles\nArrowDown.displayName = 'ArrowDown'\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * ArrowUp icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const ArrowUp = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 16,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill=\"none\"\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <line fill=\"none\" strokeLinecap=\"butt\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"2\" />\n        <polyline fill=\"none\" points=\"5,9 12,2 19,9 \" stroke={strokeColor} />\n      </g>\n    </Svg>\n  )\n}\n\nexport default ArrowUp\nArrowUp.displayName = 'ArrowUp'\nArrowUp.style = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'currentColor',\n}\n\n/*\n * ArrowRight icon component.\n *\n * Renders a right arrow SVG icon.\n *\n * @param {IconProps} props - The component props\n * @param {string} [props.size=\"24\"] - Icon size\n * @param {string} [props.fill=\"currentColor\"] - Icon fill color\n * @param {string} [props.strokeColor=\"currentColor\"] - Stroke color\n *\n * @returns {React.ReactElement} - The rendered icon\n */\nexport const ArrowRight = ({\n  size = 16,\n  fill = 'currentColor',\n  strokeColor = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Right arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill={fill}\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <line fill=\"none\" strokeLinecap=\"butt\" x1=\"2\" x2=\"22\" y1=\"12\" y2=\"12\" />\n        <polyline fill=\"none\" points=\"15,5 22,12 15,19 \" stroke={strokeColor} />\n      </g>\n    </Svg>\n  )\n}\n\nexport default ArrowRight\nArrowRight.displayName = 'ArrowRight'\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\nexport const User = ({\n  size = 16,\n  fill = 'none',\n  strokeColor = 'currentColor',\n  styles,\n  alt = 'User Icon',\n  role,\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} role={role} alt={alt} styles={styles} {...props}>\n      <g\n        fill={fill}\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <circle cx=\"12\" cy=\"5.5\" fill=\"none\" r=\"4.5\" />\n        <path\n          d=\"M12,14c-4.971,0-9,4.029-9,9H21c0-4.971-4.029-9-9-9Z\"\n          fill=\"none\"\n          stroke={strokeColor}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default User\nUser.styles = defaultStyles\nUser.displayName = 'User'\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  fill: 'currentColor',\n}\n\n/**\n * Renders a right arrow icon.\n *\n * @param {string} size - The size of the icon.\n * @param {string} fill - The fill color of the icon.\n * @param {React.CSSProperties} styles - The styles to apply to the icon.\n * @param {IconProps} props - The props to pass down to the icon.\n * @returns {JSX.Element} - A right arrow icon.\n */\nexport const Right = ({\n  size = 16,\n  fill = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Right arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} alt={alt} styles={styles} role={role} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M7,23a1,1,0,0,1-.707-1.707L15.586,12,6.293,2.707A1,1,0,0,1,7.707,1.293l10,10a1,1,0,0,1,0,1.414l-10,10A1,1,0,0,1,7,23Z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Right\nRight.displayName = 'Right'\nRight.styles = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'currentColor',\n}\n\n/**\n * Left arrow icon\n * @param {string} fill - Icon fill color (default: 'currentColor')\n * @param {string} size - Icon size (default: '24')\n * @param {React.CSSProperties} styles - Icon styles (default: {})\n * @param {IconProps} props - Any other valid props for an SVG element\n * @returns {JSX.Element} - Rendered icon component\n */\nexport const Left = ({\n  fill = 'currentColor',\n  size = 16,\n  styles,\n  role = 'img',\n  alt = 'Left arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} alt={alt} role={role} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M17,23a1,1,0,0,1-.707-.293l-10-10a1,1,0,0,1,0-1.414l10-10a1,1,0,0,1,1.414,1.414L8.414,12l9.293,9.293A1,1,0,0,1,17,23Z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Left\nLeft.displayName = 'Left'\nLeft.styles = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  fill: 'currentColor',\n}\n\n/**\n * Minus icon component\n * @param {string} size - Icon size (default: 24)\n * @param {string} fill - Icon fill color (default: 'currentColor')\n * @param {object} styles - Inline styles for the SVG element\n * @param {object} props - Any other SVG attributes\n * @returns {JSX.Element} - Rendered Minus icon component\n */\nexport const Minus = ({\n  size = 24,\n  fill = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Minus icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M17,11H7c-.553,0-1,.447-1,1s.447,1,1,1h10c.553,0,1-.447,1-1s-.447-1-1-1Z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Minus\nMinus.displayName = 'Minus'\nMinus.styles = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  fill: 'currenStyle',\n}\n\n/**\n * Remove icon component\n * @param {string} size - The size of the icon\n * @param {string} fill - The fill color of the icon\n * @param {object} styles - The styles to apply to the icon\n * @param {object} props - The additional props to pass to the icon\n * @returns {JSX.Element} - The Remove icon component\n */\nexport const Remove = ({\n  size = 16,\n  fill = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Remove icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} alt={alt} styles={styles} role={role} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M19.7,4.3c-0.4-0.4-1-0.4-1.4,0L12,10.6L5.7,4.3c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l6.3,6.3l-6.3,6.3 c-0.4,0.4-0.4,1,0,1.4C4.5,19.9,4.7,20,5,20s0.5-0.1,0.7-0.3l6.3-6.3l6.3,6.3c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3 c0.4-0.4,0.4-1,0-1.4L13.4,12l6.3-6.3C20.1,5.3,20.1,4.7,19.7,4.3z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Remove\nRemove.displayName = 'Remove'\nRemove.styles = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  stroke: 'currentColor',\n}\n\n/**\n * Copy icon component\n * @param {string} size - The width and height of the icon\n * @param {string} strokeColor - The color of the icon stroke\n * @param {IconProps} props - The icon component props\n * @returns {JSX.Element} - A react JSX element representing the copy icon\n */\nexport const Copy = ({\n  size = 16,\n  strokeColor = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Copy icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>): JSX.Element => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill=\"none\"\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <polyline\n          fill=\"none\"\n          points=\"8 19 2 19 2 1 17 1 17 6\"\n          stroke={strokeColor}\n        />\n        <rect height=\"13\" width=\"10\" fill=\"none\" x=\"12\" y=\"10\" />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Copy\nCopy.displayName = 'Copy'\nCopy.styles = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nconst defaultStyles = { ...Svg.styles }\nexport const Up = ({\n  size = 16,\n  fill = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} alt={alt} styles={styles} role={role} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M22,18a1,1,0,0,1-.707-.293L12,8.414,2.707,17.707a1,1,0,0,1-1.414-1.414l10-10a1,1,0,0,1,1.414,0l10,10A1,1,0,0,1,22,18Z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Up\nUp.displayName = 'Up'\nUp.styles = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = { ...Svg.styles }\n\nexport const Down = ({\n  size = 16,\n  fill = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Down arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} alt={alt} styles={styles} role={role} {...props}>\n      <g fill={fill}>\n        <path\n          d=\"M12,18a1,1,0,0,1-.707-.293l-10-10A1,1,0,0,1,2.707,6.293L12,15.586l9.293-9.293a1,1,0,1,1,1.414,1.414l-10,10A1,1,0,0,1,12,18Z\"\n          fill={fill}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Down\nDown.displayName = 'Down'\nDown.styles = defaultStyles\n","import { IconProps } from '../types'\nimport React from 'react'\nimport Svg from './svg'\n\nexport function Star({\n  size = 16,\n  fill,\n  strokeColor = 'currentColor',\n  styles,\n  role = 'img',\n  alt = 'Star icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) {\n  return (\n    <Svg size={size} alt={alt} styles={styles} role={role} {...props}>\n      <g\n        fill={fill}\n        stroke={strokeColor}\n        strokeLinecap=\"square\"\n        strokeLinejoin=\"miter\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"2\"\n      >\n        <polygon\n          fill=\"none\"\n          points=\"12,2.49 15.09,8.75 22,9.754 17,14.628 18.18,21.51 12,18.262 5.82,21.51 7,14.628 2,9.754 8.91,8.75 \"\n          stroke={strokeColor}\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport default Star\nStar.displayName = 'Star'\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * ArrowUp icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const Play = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 24,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill=\"none\"\n        stroke-linecap=\"square\"\n        stroke-linejoin=\"miter\"\n        stroke-miterlimit=\"10\"\n      >\n        <path\n          d=\"M7 21L7 3L19 12L7 21Z\"\n          stroke={strokeColor}\n          stroke-width=\"2\"\n          fill=\"none\"\n        ></path>{' '}\n      </g>\n    </Svg>\n  )\n}\n\nexport default Play\nPlay.displayName = 'PlayIcon'\nPlay.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * ArrowUp icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const Pause = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 16,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill=\"none\"\n        stroke-linecap=\"square\"\n        stroke-linejoin=\"miter\"\n        stroke-miterlimit=\"10\"\n      >\n        <rect\n          x=\"2\"\n          y=\"2\"\n          width=\"6\"\n          height=\"20\"\n          fill=\"none\"\n          stroke={strokeColor}\n          stroke-width=\"2\"\n        ></rect>\n        <rect\n          x=\"16\"\n          y=\"2\"\n          width=\"6\"\n          height=\"20\"\n          fill=\"none\"\n          stroke={strokeColor}\n          stroke-width=\"2\"\n        ></rect>\n      </g>\n    </Svg>\n  )\n}\n\nexport default Pause\nPause.displayName = 'Pause'\nPause.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * Resume icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const Resume = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 16,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill=\"none\"\n        stroke-linecap=\"square\"\n        stroke-linejoin=\"miter\"\n        stroke-miterlimit=\"10\"\n      >\n        <path\n          d=\"M20 21L20 3\"\n          stroke={strokeColor}\n          stroke-width=\"2\"\n          fill=\"none\"\n        ></path>\n        <path\n          d=\"M4 4L4 20L16 12L4 4Z\"\n          stroke={strokeColor}\n          stroke-width=\"2\"\n          fill=\"none\"\n        ></path>\n      </g>\n    </Svg>\n  )\n}\n\nexport default Resume\nResume.displayName = 'Resume'\nResume.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * Stop icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const Stop = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 16,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g\n        fill=\"none\"\n        stroke-linecap=\"square\"\n        stroke-linejoin=\"miter\"\n        stroke-miterlimit=\"10\"\n      >\n        <rect\n          x=\"2\"\n          y=\"2\"\n          fill=\"none\"\n          stroke={strokeColor}\n          stroke-width=\"2\"\n          width=\"20\"\n          height=\"20\"\n        ></rect>\n      </g>\n    </Svg>\n  )\n}\n\nexport default Stop\nStop.displayName = 'Stop'\nStop.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * Stop icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const StopSolid = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 24,\n  role = 'img',\n  alt = 'Stop icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g fill={strokeColor}>\n        <path\n          fill={strokeColor}\n          d=\"M22,1H2C1.447,1,1,1.447,1,2v20c0,0.553,0.447,1,1,1h20c0.553,0,1-0.447,1-1V2C23,1.447,22.553,1,22,1z\"\n        ></path>\n      </g>\n    </Svg>\n  )\n}\n\nexport default StopSolid\nStopSolid.displayName = 'StopSolid'\nStopSolid.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * ArrowUp icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const PlaySolid = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 24,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g fill={strokeColor}>\n        <path\n          fill={strokeColor}\n          d=\"M20.555,11.168l-15-10c-0.307-0.204-0.702-0.224-1.026-0.05C4.203,1.292,4,1.631,4,2v20 c0,0.369,0.203,0.708,0.528,0.882C4.676,22.961,4.838,23,5,23c0.194,0,0.388-0.057,0.555-0.168l15-10C20.833,12.646,21,12.334,21,12 S20.833,11.354,20.555,11.168z\"\n        ></path>\n      </g>\n    </Svg>\n  )\n}\n\nexport default PlaySolid\nPlaySolid.displayName = 'PlaySolid'\nPlaySolid.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * ArrowUp icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const PauseSolid = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 24,\n  role = 'img',\n  alt = 'Pause arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g fill={strokeColor}>\n        <path\n          d=\"M7,1H2A1,1,0,0,0,1,2V22a1,1,0,0,0,1,1H7a1,1,0,0,0,1-1V2A1,1,0,0,0,7,1Z\"\n          fill={strokeColor}\n        ></path>\n        <path\n          d=\"M22,1H17a1,1,0,0,0-1,1V22a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V2A1,1,0,0,0,22,1Z\"\n          fill={strokeColor}\n        ></path>\n      </g>\n    </Svg>\n  )\n}\n\nexport default PauseSolid\nPauseSolid.displayName = 'PauseSolid'\nPauseSolid.style = defaultStyles\n","import * as React from 'react'\n\nimport { IconProps } from '../types'\nimport Svg from './svg'\n\nconst defaultStyles = {\n  ...Svg.styles,\n  fill: 'none',\n  stroke: 'currentColor',\n}\n\n/**\n * Resume icon component\n * @param fill - Icon fill color\n * @param strokeColor - Icon stroke color\n * @param styles - Icon styles\n * @param size - Icon size\n */\nexport const ResumeSolid = ({\n  strokeColor = 'currentColor',\n  styles,\n  size = 16,\n  role = 'img',\n  alt = 'Up arrow icon',\n  ...props\n}: Pick<\n  IconProps,\n  'strokeColor' | 'fill' | 'styles' | 'size' | 'role' | 'alt'\n>) => {\n  return (\n    <Svg size={size} styles={styles} role={role} alt={alt} {...props}>\n      <g fill={strokeColor}>\n        <path\n          fill={strokeColor}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M3 21.8685L17.8028 12L3 2.1315L3 21.8685Z\"\n        ></path>\n        <path\n          fill={strokeColor}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M19 2L19 22L21 22L21 2L19 2Z\"\n        ></path>\n      </g>\n    </Svg>\n  )\n}\n\nexport default ResumeSolid\nResumeSolid.displayName = 'ResumeSolid'\nResumeSolid.style = defaultStyles\n","import {\n  Add,\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n  Chat,\n  Code,\n  Copy,\n  Down,\n  Home,\n  Left,\n  Minus,\n  Remove,\n  Right,\n  Star,\n  Up,\n  User,\n  Play,\n  Pause,\n  Stop,\n  Resume,\n  PlaySolid,\n  PauseSolid,\n  ResumeSolid,\n  StopSolid\n} from './index'\n\nimport UI from '#components/ui'\nimport React from 'react'\n\n/**\n * The default styles object for the Icon component.\n *\n * @property {string} display - Sets display to 'inline-flex' to make Icon inline.\n * @property {string} direction - Sets flex direction to 'row'.\n * @property {string} gap - Sets gap between items to '.2rem'.\n * @property {string} placeItems - Centers items vertically using 'center'.\n * @property {string} width - Sets width to 'auto' for automatic sizing.\n */\nconst defaultStyles = {\n  display: 'inline-flex',\n  direction: 'row',\n  gap: '.2rem',\n  placeItems: 'center',\n  width: 'auto',\n}\n\nexport type IconProps = React.ComponentProps<typeof UI>\n\nexport const Icon = ({\n  id,\n  classes,\n  children,\n  styles,\n  ...props\n}: IconProps) => {\n  return (\n    <UI\n      id={id}\n      as=\"span\"\n      styles={styles}\n      className={classes}\n      data-icon\n      data-style=\"icons\"\n      {...props}\n    >\n      {children}\n    </UI>\n  )\n}\n\nexport default Icon\nIcon.displayName = 'Icon'\nIcon.styles = defaultStyles\nIcon.Add = Add\nIcon.ArrowDown = ArrowDown\nIcon.ArrowLeft = ArrowLeft\nIcon.ArrowRight = ArrowRight\nIcon.ArrowUp = ArrowUp\nIcon.Chat = Chat\nIcon.Code = Code\nIcon.Copy = Copy\nIcon.Home = Home\nIcon.Left = Left\nIcon.Minus = Minus\nIcon.Remove = Remove\nIcon.Right = Right\nIcon.Star = Star\nIcon.Up = Up\nIcon.Down = Down\nIcon.User = User\nIcon.Play = Play\nIcon.Pause = Pause\nIcon.Stop = Stop\nIcon.Resume = Resume\nIcon.ResumeSolid = ResumeSolid\nIcon.PlaySolid = PlaySolid\nIcon.PauseSolid = PauseSolid\nIcon.StopSolid = StopSolid\n"]}